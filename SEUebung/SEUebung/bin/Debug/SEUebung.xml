<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SEUebung</name>
    </assembly>
    <members>
        <member name="T:SEUebung.FixStrings.ResponseStrings">
            <summary>
            new class of fix Strings for the Reponse
            </summary>
        </member>
        <member name="F:SEUebung.FixStrings.ResponseStrings.headerValuesResponse">
            <summary>
            new List for the possible Header Values in the Response
            </summary>
        </member>
        <member name="M:SEUebung.FixStrings.ResponseStrings.#cctor">
            <summary>
            new instance of the possible response strings
            </summary>
        </member>
        <member name="T:SEUebung.PluginManager">
            <summary>
            Plugin Manager
            </summary>
        </member>
        <member name="M:SEUebung.PluginManager.#ctor">
            <summary>
            Constructor 
            </summary>
        </member>
        <member name="P:SEUebung.PluginManager.Plugins">
            <summary>
            returns a list of all Plugins
            </summary>
        </member>
        <member name="M:SEUebung.PluginManager.Add(SEUebung.Interfaces.IPlugin)">
            <summary>
            Adds a Plugin to the PluginManager when given a Typ Plugin
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:SEUebung.PluginManager.Add(System.String)">
            <summary>
            Adds a Plugin to the PluginManager when given a string
            </summary>
            <param name="plugin"></param>
        </member>
        <member name="M:SEUebung.PluginManager.Clear">
            <summary>
            clears the Plugin
            </summary>
        </member>
        <member name="T:SEUebung.Plugin.StaticDataPlugin">
            <summary>
            StaticDataPlugin
            </summary>
        </member>
        <member name="M:SEUebung.Plugin.StaticDataPlugin.CanHandle(SEUebung.Interfaces.IRequest)">
            <summary>
            checks if the Plugin is valid
            </summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:SEUebung.Plugin.StaticDataPlugin.Handle(SEUebung.Interfaces.IRequest)">
            <summary>
            handles the Plugin and returns the response
            </summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="T:SEUebung.Plugin.TestPlugin">
            <summary>
            TestPlugin
            </summary>
        </member>
        <member name="M:SEUebung.Plugin.TestPlugin.CanHandle(SEUebung.Interfaces.IRequest)">
            <summary>
            checks if the Plugin is valid
            </summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="M:SEUebung.Plugin.TestPlugin.Handle(SEUebung.Interfaces.IRequest)">
            <summary>
            handles the Plugin and returns the response
            </summary>
            <param name="req"></param>
            <returns></returns>
        </member>
        <member name="T:SEUebung.Request">
            <summary>
            Request
            </summary>
        </member>
        <member name="M:SEUebung.Request.#ctor(System.IO.Stream)">
            <summary>
            Constructor for the Request. reads the Header line by line
            </summary>
            <param name="ns"></param>
        </member>
        <member name="P:SEUebung.Request.Method">
            <summary>
            returns the Method
            </summary>
        </member>
        <member name="P:SEUebung.Request.Url">
            <summary>
            returns the URL
            </summary>
        </member>
        <member name="P:SEUebung.Request.Headers">
            <summary>
            returns the a Dictionary of all Header Values from the Request
            </summary>
        </member>
        <member name="P:SEUebung.Request.IsValid">
            <summary>
            checks if the Request is valid
            </summary>
        </member>
        <member name="P:SEUebung.Request.UserAgent">
            <summary>
            returns the UserAgent
            </summary>
        </member>
        <member name="P:SEUebung.Request.HeaderCount">
            <summary>
            returns how many lines the Header has
            </summary>
        </member>
        <member name="P:SEUebung.Request.ContentLength">
            <summary>
            returns the ContentLength
            </summary>
        </member>
        <member name="P:SEUebung.Request.ContentType">
            <summary>
            returns the ContentType
            </summary>
        </member>
        <member name="P:SEUebung.Request.ContentStream">
            <summary>
            returns the Stream
            </summary>
        </member>
        <member name="P:SEUebung.Request.ContentString">
            <summary>
            returns the ContentString
            </summary>
        </member>
        <member name="P:SEUebung.Request.ContentBytes">
            <summary>
            returns the Content in Bytes
            </summary>
        </member>
        <member name="T:SEUebung.Url">
            <summary>
            URL class
            </summary>
        </member>
        <member name="M:SEUebung.Url.#ctor(System.String)">
            <summary>
            constructor of the URL
            </summary>
            <param name="url"></param>
        </member>
        <member name="T:SEUebung.Webserver">
            <summary>
            Webserver class
            </summary>
        </member>
        <member name="M:SEUebung.Webserver.#ctor">
            <summary>
            Constructor of webserver
            </summary>
        </member>
        <member name="M:SEUebung.Webserver.Start">
            <summary>
            starts the Webserver. Waits for a client to connect and than threds the Request
            </summary>
        </member>
        <member name="M:SEUebung.Webserver.HandleRequest(System.Object)">
            <summary>
            handles the request, checks if request is valid
            </summary>
            <param name="socketclient"></param>
        </member>
        <member name="P:SEUebung.Response.Status">
            <summary>
            Returns the Status of the Response as a String 
            </summary>
        </member>
        <member name="P:SEUebung.Response.ContentLength">
            <summary>
            Returns the content length or 0 if no content is set yet.
            </summary>
        </member>
        <member name="P:SEUebung.Response.ContentType">
            <summary>
            returns the ContentType
            </summary>
        </member>
        <member name="P:SEUebung.Response.Headers">
            <summary>
            returns a Dictionary of the Values from the Header 
            </summary>
        </member>
        <member name="M:SEUebung.Response.AddHeader(System.String,System.String)">
            <summary>
            Adds a Value to the Header.
            </summary>
            <param name="header"></param>
            <param name="value"></param>
        </member>
        <member name="M:SEUebung.Response.Send(System.IO.Stream)">
            <summary>
            sends the response
            </summary>
            <param name="ns"></param>
        </member>
        <member name="M:SEUebung.Response.SetContent(System.IO.Stream)">
            <summary>
            sets the Content from the Stream
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:SEUebung.Response.SetContent(System.Byte[])">
            <summary>
            Sets the Content from a byte array
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:SEUebung.Response.SetContent(System.String)">
            <summary>
            sets the content from a string
            </summary>
            <param name="content"></param>
        </member>
        <member name="P:SEUebung.Response.StatusCode">
            <summary>
            sets the Statuscode
            </summary>
        </member>
        <member name="P:SEUebung.Response.ServerHeader">
            <summary>
            sets and returns the ServerHeader
            </summary>
        </member>
    </members>
</doc>
